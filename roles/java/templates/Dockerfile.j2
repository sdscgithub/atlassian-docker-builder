FROM {% if registry is defined %}{{ registry }}/{% endif %}{{ image_base }}/base-{{ os }}:{{ osversion }}

{% include "roles/common/templates/Dockerfile.j2" %}

ENV JAVA_DWL_VER {{ java }}{{ javabuild }}

ENV JAVA_HOME=/usr/java/current \
    JDK_HOME=${JAVA_HOME} \
    JRE_HOME=${JAVA_HOME} \
    GLIBC_VERSION=2.23-r3
ENV PATH ${JAVA_HOME}/bin:${PATH} 

RUN mkdir /usr/java ; cd /usr/java/ ; \
     apk add --no-cache libstdc++ && \
     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done && \
     apk add --allow-untrusted /tmp/*.apk && \
     rm -v /tmp/*.apk && \
     curl -L -O -H "Cookie: oraclelicense=accept-securebackup-cookie" -k {{ javaurl }}/jdk-${JAVA_DWL_VER}-linux-x64.tar.gz && \
     cd /usr/java/ && \
     tar -xzf jdk-${JAVA_DWL_VER}-linux-x64.tar.gz && \
     rm -f jdk-${JAVA_DWL_VER}-linux-x64.tar.gz && \
     cd /usr/java/ && \
     ln -s * current && \
     chown -R root:root /usr/java && \
     chmod -R a+rwX /usr/java && \
     rm -rf $JAVA_HOME/*src.zip \
           $JAVA_HOME/lib/missioncontrol \
           $JAVA_HOME/lib/visualvm \
           $JAVA_HOME/lib/*javafx* \
           $JAVA_HOME/jre/lib/plugin.jar \
           $JAVA_HOME/jre/lib/ext/jfxrt.jar \
           $JAVA_HOME/jre/bin/javaws \
           $JAVA_HOME/jre/lib/javaws.jar \
           $JAVA_HOME/jre/lib/desktop \
           $JAVA_HOME/jre/plugin \
           $JAVA_HOME/jre/lib/deploy* \
           $JAVA_HOME/jre/lib/*javafx* \
           $JAVA_HOME/jre/lib/*jfx* \
           $JAVA_HOME/jre/lib/amd64/libdecora_sse.so \
           $JAVA_HOME/jre/lib/amd64/libprism_*.so \
           $JAVA_HOME/jre/lib/amd64/libfxplugins.so \
           $JAVA_HOME/jre/lib/amd64/libglass.so \
           $JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so \
           $JAVA_HOME/jre/lib/amd64/libjavafx*.so \
           $JAVA_HOME/jre/lib/amd64/libjfx*.so
